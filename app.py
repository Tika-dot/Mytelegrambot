import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, InputMediaPhoto

TOKEN = '8488722647:AAG63wQERK5ZSRoZONxUvq9uU9GXU--KNxI'
ADMIN_ID = 8001717196

bot = telebot.TeleBot(TOKEN)
user_data = {}

@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üì© –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ")
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–¥–∞—á–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π.\n–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Ä–∞–∑–º–µ—Å—Ç–∏—Ç—å —Å–≤–æ—ë.", reply_markup=markup)

@bot.message_handler(func=lambda m: m.text == "üì© –†–∞–∑–º–µ—Å—Ç–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ")
def request_ad_text(message):
    user_data[message.chat.id] = {'photos': []}
    bot.send_message(message.chat.id, "‚úèÔ∏è –ù–∞–ø–∏—à–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è (—á—Ç–æ —Å–¥–∞—ë—Ç—Å—è/–ø—Ä–æ–¥–∞—ë—Ç—Å—è, —Ü–µ–Ω–∞, —Ä–∞–π–æ–Ω):")

@bot.message_handler(func=lambda m: m.chat.id in user_data and 'text' not in user_data[m.chat.id])
def save_text(message):
    user_data[message.chat.id]['text'] = message.text
    bot.send_message(message.chat.id, "üìû –¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç (–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏–ª–∏ @username):")

@bot.message_handler(func=lambda m: m.chat.id in user_data and 'contact' not in user_data[m.chat.id])
def save_contact(message):
    user_data[message.chat.id]['contact'] = message.text
    bot.send_message(message.chat.id, "üì∑ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥–æ 3 —Ñ–æ—Ç–æ –∫–≤–∞—Ä—Ç–∏—Ä—ã. –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '–ì–æ—Ç–æ–≤–æ'.")

@bot.message_handler(content_types=['photo'])
def collect_photos(message):
    chat_id = message.chat.id
    data = user_data.get(chat_id)
    if not data or len(data['photos']) >= 3:
        bot.send_message(chat_id, "‚ùó–í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ 3 —Ñ–æ—Ç–æ. –ù–∞–ø–∏—à–∏—Ç–µ '–ì–æ—Ç–æ–≤–æ'.")
        return
    data['photos'].append(message.photo[-1].file_id)
    bot.send_message(chat_id, f"‚úÖ –§–æ—Ç–æ {len(data['photos'])} –ø–æ–ª—É—á–µ–Ω–æ. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â—ë –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '–ì–æ—Ç–æ–≤–æ'.")

@bot.message_handler(func=lambda m: m.text.lower() == '–≥–æ—Ç–æ–≤–æ')
def confirm_preview(message):
    chat_id = message.chat.id
    data = user_data.get(chat_id)
    if not data or not data['photos']:
        bot.send_message(chat_id, "‚ùó–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã 1 —Ñ–æ—Ç–æ.")
        return

    text = f"üìÑ –û–±—ä—è–≤–ª–µ–Ω–∏–µ:\n{data['text']}\n\nüìû –ö–æ–Ω—Ç–∞–∫—Ç: {data['contact']}"
    media = []

    for idx, photo_id in enumerate(data['photos']):
        if idx == 0:
            media.append(InputMediaPhoto(photo_id, caption=text))
        else:
            media.append(InputMediaPhoto(photo_id))

    bot.send_media_group(chat_id, media)

    markup = InlineKeyboardMarkup()
    markup.add(
        InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm"),
        InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="cancel")
    )
    bot.send_message(chat_id, "–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ?", reply_markup=markup)

@bot.callback_query_handler(func=lambda call: call.data in ['confirm', 'cancel'])
def handle_decision(call):
    chat_id = call.message.chat.id
    data = user_data.get(chat_id)

    if call.data == 'cancel':
        bot.send_message(chat_id, "‚ùå –û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
        user_data.pop(chat_id, None)
        return

    if not data:
        bot.send_message(chat_id, "‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ù–∞—á–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ: /start")
        return

    caption = f"üÜï –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\n\nüìÑ –û–±—ä—è–≤–ª–µ–Ω–∏–µ:\n{data['text']}\n\nüìû –ö–æ–Ω—Ç–∞–∫—Ç: {data['contact']}\nüë§ –û—Ç @{call.from_user.username or '–±–µ–∑ username'}"
    media = []

    for i, file_id in enumerate(data['photos']):
        if i == 0:
            media.append(InputMediaPhoto(file_id, caption=caption))
        else:
            media.append(InputMediaPhoto(file_id))

    bot.send_media_group(ADMIN_ID, media)
    bot.send_message(chat_id, "‚úÖ –°–ø–∞—Å–∏–±–æ! –û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.")
    user_data.pop(chat_id, None)

bot.polling()
